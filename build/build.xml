<project basedir="/home/bsutton/dev/NoojeeClick/" default="all">
	<description>
		Builds the Noojee Click xpi file ready for deployment.
	</description>

	<property name="src" value="${basedir}/srcExtension" />
	<property name="build" value="${basedir}/build" />
	<property name="version" value="1.5.4" />
	<property name="versionDir" value="${basedir}/versions/${version}" />
	<property name="xpiName" value="noojeeclick-${version}.xpi" />
	<property name="updateURL" value="&lt;em:updateURL&gt;https://www.noojee.com.au/noojeeclick/update.rdf&lt;/em:updateURL&gt;" />

	<fileset id="includes" dir="${src}">
		<include name="**/*.xml" />
		<include name="**/*.js" />
		<include name="**/*.png" />
		<include name="**/*.manifest" />
		<include name="**/*.xul" />
		<include name="${versionDir}/updateinfo${version}.xml" />
		<include name="update.rdf" />
		<include name="install.rdf" />
		<exclude name="**/*.xpi" />
		<exclude name="**/.*" />
	</fileset>


	<target name="init" depends="filter">
		<tstamp />
	</target>

	<target name="filter">
		<description>
			Sub target which is responsible for substituting tokens found in files
		</description>
		<mkdir dir="${versionDir}" />
	</target>

	<target name="customFilter">
		<description>
			Sub target which is responsible for substituting tokens found in files
		</description>
		<mkdir dir="${versionDir}" />
		<!-- create the update.rdf using the 2hippo specific setting -->
		<copy file="${build}/templates/2hippo/update.rdf" tofile="${versionDir}/src/update.rdf" overwrite="True">
			<filterchain>
				<replacetokens>
					<token key="version" value="${version}" />
				</replacetokens>
			</filterchain>
		</copy>

		<!-- copy all of the core files and update the version no. in the about box -->
		<copy  todir="${versionDir}/2hippo/src" overwrite="True">
			<fileset refid="includes"/>
			<filterchain>
				<replacetokens>
					<token key="version" value="${version}" />
				</replacetokens>
			</filterchain>
		</copy>
		
	</target>

	<target name="installMozilla">
		<description>
			Sub target which is responsible for substituting tokens found in files
		</description>
		<mkdir dir="${versionDir}" />
		<!-- create the install.rdf using the correct version number specific setting
		  and with a blank updateURL -->
		<copy file="${build}/templates/install.rdf" tofile="${versionDir}/src/install.rdf" overwrite="True">
			<filterchain>
				<replacetokens>
					<token key="version" value="${version}" />
					<token key="updateURL" value="" />
				</replacetokens>
			</filterchain>
		</copy>
			<!-- copy all of the core files and update the version no. in the about box -->
			<copy  todir="${versionDir}/mozilla/src" overwrite="True">
				<fileset refid="includes"/>
				<filterchain>
					<replacetokens>
						<token key="version" value="${version}" />
					</replacetokens>
				</filterchain>
			</copy>
		
	</target>

	<target name="installLocal">
		<description>
			Sub target which is responsible for substituting tokens found in files
		</description>
		<mkdir dir="${versionDir}" />
		<!-- create the install.rdf using the correct version number specific setting
		  and with the correct updateURL -->

		<copy file="${build}/templates/install.rdf" tofile="${versionDir}/src/install.rdf" overwrite="True">
			<filterchain>
				<replacetokens>
					<token key="version" value="${version}" />
					<token key="updateURL" value="${updateURL}" />
				</replacetokens>
			</filterchain>
		</copy>
			<!-- copy all of the core files and update the version no. in the about box -->
			<copy  todir="${versionDir}/local/src" overwrite="True">
				<fileset refid="includes"/>
				<filterchain>
					<replacetokens>
						<token key="version" value="${version}" />
					</replacetokens>
				</filterchain>
			</copy>
		
	</target>

	<target name="installCustom">
		<description>
			Sub target which is responsible for substituting tokens found in files
		</description>
		<mkdir dir="${versionDir}" />
		<!-- create the install.rdf using the correct version number specific setting
		  and with the correct updateURL for 2Hippo -->

		<copy file="${build}/templates/2hippo/install.rdf" tofile="${versionDir}/src/install.rdf" overwrite="True">
			<filterchain>
				<replacetokens>
					<token key="version" value="${version}" />
					<token key="updateURL" value="" />
				</replacetokens>
			</filterchain>
		</copy>
	</target>

	<target name="mozilla" depends="installMozilla">
		<description>
			Builds an xpi suitable for hosting on the mozilla plugin website.
		</description>
		<echo>Building mozilla</echo>
		<mkdir dir="${versionDir}/mozilla" />
		<mkdir dir="${versionDir}/mozilla/src" />
		<delete file="${versionDir}/mozilla/${xpiName}" />
		<jar basedir="${versionDir}/mozilla/src" duplicate="fail" excludes="**/*" destfile="${versionDir}/mozilla/${xpiName}">
			<fileset refid="includes" />
		</jar>
	</target>

	<target name="local" depends="installLocal">
		<description>
			Builds an xpi suitable for hosting on the mozilla plugin website.
		</description>
		<echo>Building local</echo>
		<mkdir dir="${versionDir}/local" />
		<mkdir dir="${versionDir}/local/src" />
		<delete file="${versionDir}/local/${xpiName}" />
		<jar basedir="${versionDir}/local/src" duplicate="fail" excludes="**/*" destfile="${versionDir}/local/${xpiName}">
			<fileset refid="includes" />
		</jar>
	</target>

	<target name="2hippo" depends="customFilter,installCustom">
		<description>
			Builds an xpi suitable for hosting on the mozilla plugin website.
		</description>
		<echo>Building 2Hippo</echo>
		<mkdir dir="${versionDir}/2hippo" />
		<mkdir dir="${versionDir}/2hippo/src" />
		<delete file="${versionDir}/2hippo/${xpiName}" />
		<jar basedir="${versionDir}/2hippo/src" duplicate="fail" excludes="**/*" destfile="${versionDir}/2hippo/${xpiName}">
			<fileset refid="includes" />
		</jar>
	</target>

	<target name="all" depends="init,local,mozilla,2hippo">
		<!-- Build each version of Noojee Click -->
	</target>

	<target name="install" depends="all">
		<!-- Install noojee click into firefox -->
		<exec dir="." executable="/bin/bash">
			<arg value="--login" />
			<arg value="-i" />
			<arg value="-c" />
			<arg value="cd /home/bsutton/dev/NoojeeClick/; ./devinstall.sh" />
		</exec>
		<!-- kill firefox as we must restart after installing xul -->
		<exec dir="." executable="/bin/bash">
			<arg value="--login" />
			<arg value="-i" />
			<arg value="-c" />
			<arg value="killall firefox" />
		</exec>

		<exec dir="." executable="/bin/bash">
			<arg value="--login" />
			<arg value="-i" />
			<arg value="-c" />
			<arg value="killall firefox-bin" />
		</exec>
		
		<!-- now restart firefox -->
		<exec dir="." executable="/bin/bash">
			<arg value="/home/bsutton/dev/NoojeeClick/restartfirefox.sh" />
		</exec>
	</target>


</project>