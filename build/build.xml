<project basedir="/home/bsutton/dev/NoojeeClick/" default="all">
	<description>
		Builds the Noojee Click xpi file ready for deployment.
	</description>

	<property name="version" value="1.5.4" />
	<property name="src" value="${basedir}/srcExtension" />
	<property name="build" value="${basedir}/build" />
	<property name="versionDir" value="${basedir}/versions/${version}" />
	<property name="xpiName" value="noojeeclick-${version}.xpi" />
	<property name="zipName" value="noojeeclick-${version}.zip" />

	 <macrodef name="defineIncludes">
	    <attribute name="path"/>
	    <sequential>
	    	<fileset id="includes" dir="${src}">
	    		<include name="**/*.xml" />
	    		<include name="**/*.js" />
	    		<include name="**/*.manifest" />
	    		<include name="**/*.xul" />
	    		<exclude name="**/.*" />
	    		<include name="${build}/templates/@{path}/updateinfo-${version}.xml" />
	    		<include name="${versionDir}/@{path}/src/update.rdf" />
	    		<include name="${versionDir}/@{path}/src/install.rdf" />
	    	</fileset>
	   	</sequential>
	 </macrodef>

	 <macrodef name="filterSrc">
	    <attribute name="path"/>
	    <attribute name="updateLink"/>
	    <sequential>
			<description>
				Sub target which is responsible for substituting tokens found in files
			</description>
			<mkdir dir="${versionDir}" />
			<!-- copy all of the core files and update the version no. in the about box -->
			<copy  todir="${versionDir}/@{path}/src" overwrite="True">
				<fileset refid="includes"/>
				<filterchain>
					<replacetokens>
						<token key="version" value="${version}" />
					</replacetokens>
				</filterchain>
			</copy>
	
	    	<!-- copy images with no filter as they are binary and filters corrupt them -->
			<copy  todir="${versionDir}/@{path}/src" overwrite="True">
				<fileset dir="${src}">
					<include name="**/*.png" />
					<exclude name="**/.*" />
				</fileset>
			</copy>

			<!-- create the update.rdf using the @{path} specific setting -->
			<echo>Copy update.rdf</echo>
			<copy file="${build}/templates/@{path}/update.rdf" tofile="${versionDir}/@{path}/src/update.rdf" overwrite="True">
				<filterchain>
					<replacetokens>
						<token key="version" value="${version}" />
						<token key="updateURL" value="@{updateLink}" />
					</replacetokens>
				</filterchain>
			</copy>

			<!-- create the install.rdf using the @{path} specific setting -->
			<echo>Copy install.rdf</echo>
			<copy file="${build}/templates/@{path}/install.rdf" tofile="${versionDir}/@{path}/src/install.rdf" overwrite="True">
				
				<filterchain>
					<replacetokens>
						<token key="version" value="${version}" />
						<token key="updateURL" value="@{updateLink}" />
					</replacetokens>
				</filterchain>
			</copy>
	   	</sequential>
	 </macrodef>
	
	 <macrodef name="createDirs">
	    <attribute name="path"/>
	    <sequential>
			<echo>Building @{path}</echo>
			<mkdir dir="${versionDir}/@{path}" />
			<mkdir dir="${versionDir}/@{path}/src" />
			<delete file="${versionDir}/@{path}/${xpiName}" />
			<jar basedir="${versionDir}/@{path}/src" duplicate="fail" excludes="**/*" destfile="${versionDir}/@{path}/${xpiName}">
		    	<fileset dir="${versionDir}/@{path}/src">
		    		<include name="**/*.xml" />
		    		<include name="**/*.js" />
		    		<include name="**/*.png" />
		    		<include name="**/*.manifest" />
		    		<include name="**/*.rdf" />
		    		<include name="**/*.xul" />
		    		<exclude name="**/.*" />
		    	</fileset>
			</jar>
			<copy file="${versionDir}/@{path}/src/update.rdf" tofile="${versionDir}/@{path}/update.rdf" overwrite="True">
			</copy>
			<copy file="${versionDir}/@{path}/src/update.rdf" tofile="${versionDir}/@{path}/update.rdf" overwrite="True">
			</copy>
			<copy file="${build}/templates/updateinfo/${version}/updateinfo-${version}.xml" tofile="${versionDir}/@{path}/updateinfo-${version}.xml" overwrite="True">
			</copy>
	    	
			<zip basedir="${versionDir}/@{path}" duplicate="fail" excludes="**/*" destfile="${versionDir}/@{path}/${zipName}">
		    	<fileset dir="${versionDir}/@{path}">
		    		<include name="*.xml" />
		    		<include name="*.rdf" />
		    		<include name="*.htm" />
		    		<include name="*.xpi" />
		    		<exclude name="**/.*" />
		    	</fileset>
			</zip>

	   	</sequential>
	 </macrodef>


	<target name="mozilla">
		<description>
			Builds an xpi suitable for hosting on the mozilla plugin website.
		</description>
		<echo>Building mozilla</echo>
		<defineIncludes  path="mozilla" />
		<filterSrc path="mozilla" updateLink=""/>
		<createDirs  path="mozilla" />
	</target>
	
	<target name="local">
		<description>
			Builds an xpi suitable for hosting locally
		</description>
		<echo>Building Local</echo>
		<defineIncludes  path="local" />
		<filterSrc path="local" updateLink="&lt;em:updateURL&gt;https://www.noojee.com.au/noojeeclick/update.rdf&lt;/em:updateURL&gt;"/>
		<createDirs  path="local" />
	</target>

	<target name="2hippo">
		<description>
			Builds an xpi suitable for 2hippo
		</description>
		<echo>Building 2Hippo</echo>
		<defineIncludes  path="2hippo" />
		<filterSrc path="2hippo" updateLink="&lt;em:updateURL&gt;https://www.2hippo.com/noojeeclick/update.rdf&lt;/em:updateURL&gt;"/>
		<createDirs  path="2hippo" />
	</target>


	<target name="all" depends="mozilla,local,2hippo">
	</target>
	
	
	<target name="install" depends="all">
		<!-- Install noojee click into firefox -->
		<exec dir="." executable="/bin/bash">
			<arg value="--login" />
			<arg value="-i" />
			<arg value="-c" />
			<arg value="cd /home/bsutton/dev/NoojeeClick/; ./devinstall.sh" />
		</exec>
		<!-- kill firefox as we must restart after installing xul -->
		<exec dir="." executable="/bin/bash">
			<arg value="--login" />
			<arg value="-i" />
			<arg value="-c" />
			<arg value="killall firefox" />
		</exec>

		<exec dir="." executable="/bin/bash">
			<arg value="--login" />
			<arg value="-i" />
			<arg value="-c" />
			<arg value="killall firefox-bin" />
		</exec>
		
		<!-- now restart firefox -->
		<exec dir="." executable="/bin/bash">
			<arg value="/home/bsutton/dev/NoojeeClick/restartfirefox.sh" />
		</exec>
	</target>


</project>
	


